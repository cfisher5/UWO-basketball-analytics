<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.1102.2300                               -->
<workbook original-version='10.3' source-build='10.3.5 (10300.17.1102.2300)' source-platform='mac' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='gameData_edited' inline='true' name='federated.1nf67000w5hs9516r7o8p1jhzvq8' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dataset' name='textscan.1ff06i015ey0sh10jmja01o31qz1'>
            <connection class='textscan' directory='/Users/ColeFisher/Projects/UWO_Analytics' filename='dataset.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ff06i015ey0sh10jmja01o31qz1' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='posID' ordinal='0' />
            <column datatype='date' name='gameID' ordinal='1' />
            <column datatype='integer' name='screens' ordinal='2' />
            <column datatype='integer' name='passes' ordinal='3' />
            <column datatype='string' name='type' ordinal='4' />
            <column datatype='string' name='result' ordinal='5' />
            <column datatype='string' name='contested' ordinal='6' />
            <column datatype='string' name='game_clock' ordinal='7' />
            <column datatype='integer' name='quarter' ordinal='8' />
            <column datatype='integer' name='shot_clock' ordinal='9' />
            <column datatype='integer' name='xcoord' ordinal='10' />
            <column datatype='integer' name='ycoord' ordinal='11' />
            <column datatype='integer' name='def_xcoord' ordinal='12' />
            <column datatype='integer' name='def_ycoord' ordinal='13' />
            <column datatype='real' name='distance' ordinal='14' />
            <column datatype='integer' name='shooter' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>posID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[posID]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>posID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gameID</remote-name>
            <remote-type>133</remote-type>
            <local-name>[gameID]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>gameID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>screens</remote-name>
            <remote-type>20</remote-type>
            <local-name>[screens]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>screens</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passes]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>passes</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contested</remote-name>
            <remote-type>129</remote-type>
            <local-name>[contested]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>contested</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_clock</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_clock]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>game_clock</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shot_clock</remote-name>
            <remote-type>20</remote-type>
            <local-name>[shot_clock]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>shot_clock</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xcoord</remote-name>
            <remote-type>20</remote-type>
            <local-name>[xcoord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>xcoord</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ycoord</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ycoord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>ycoord</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>def_xcoord</remote-name>
            <remote-type>20</remote-type>
            <local-name>[def_xcoord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>def_xcoord</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>def_ycoord</remote-name>
            <remote-type>20</remote-type>
            <local-name>[def_ycoord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>def_ycoord</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shooter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[shooter]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>shooter</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='passes+screens' datatype='integer' name='[Calculation_2257851527290048512]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[passes] + [screens]' />
      </column>
      <column caption='GoodResult/BadResult' datatype='integer' name='[Calculation_3907646738084331520]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [result] == &apos;make&apos; or [result] == &apos;oreb&apos; or [result] == &apos;foul&apos; THEN 1 ELSE 0 END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Passes (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[passes]' peg='0' size='1.424' />
      </column>
      <column aggregation='None' datatype='integer' name='[Screens (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[screens]' peg='0' size='0.865' />
      </column>
      <column caption='Contested' datatype='string' name='[contested]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;high&quot;' value='high contest' />
          <alias key='&quot;low&quot;' value='low contest' />
          <alias key='&quot;med&quot;' value='medium contest' />
          <alias key='&quot;none&quot;' value='no contest' />
        </aliases>
      </column>
      <column caption='Def Xcoord' datatype='integer' name='[def_xcoord]' role='measure' type='quantitative' />
      <column caption='Def Ycoord' datatype='integer' name='[def_ycoord]' role='measure' type='quantitative' />
      <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
      <column caption='Game ID' datatype='date' name='[gameID]' role='dimension' type='ordinal' />
      <column caption='Game Clock' datatype='string' name='[game_clock]' role='dimension' type='nominal' />
      <column caption='Passes' datatype='integer' name='[passes]' role='measure' type='quantitative' />
      <column caption='Pos ID' datatype='integer' name='[posID]' role='dimension' type='ordinal' />
      <column caption='Quarter' datatype='integer' name='[quarter]' role='dimension' type='quantitative' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Screens' datatype='integer' name='[screens]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Shooter' datatype='integer' name='[shooter]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Shot Clock' datatype='integer' name='[shot_clock]' role='dimension' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;fb&quot;' value='Fast Break' />
          <alias key='&quot;hq&quot;' value='Half Court' />
        </aliases>
      </column>
      <column caption='Xcoord' datatype='integer' name='[xcoord]' role='measure' type='quantitative' />
      <column caption='Ycoord' datatype='integer' name='[ycoord]' role='measure' type='quantitative' />
      <column-instance column='[result]' derivation='Attribute' name='[attr:result:nk]' pivot='key' type='nominal' />
      <column-instance column='[passes]' derivation='Avg' name='[avg:passes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[screens]' derivation='Avg' name='[avg:screens:qk]' pivot='key' type='quantitative' />
      <column-instance column='[contested]' derivation='Count' name='[cnt:contested:qk]' pivot='key' type='quantitative' />
      <column-instance column='[result]' derivation='Count' name='[cnt:result:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3907646738084331520]' derivation='Sum' forecast-column-base='[sum:Calculation_3907646738084331520:ok]' forecast-column-type='forecast-value' name='[fVal:sum:Calculation_3907646738084331520:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2257851527290048512]' derivation='None' name='[none:Calculation_2257851527290048512:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[contested]' derivation='None' name='[none:contested:nk]' pivot='key' type='nominal' />
      <column-instance column='[result]' derivation='None' name='[none:result:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[xcoord]' derivation='None' name='[none:xcoord:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ycoord]' derivation='None' name='[none:ycoord:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3907646738084331520]' derivation='Sum' name='[sum:Calculation_3907646738084331520:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Contested,passes+screens,Xcoord,Ycoord)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:contested:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_2257851527290048512:qk]' />
          <groupfilter function='level-members' level='[none:xcoord:qk]' />
          <groupfilter function='level-members' level='[none:ycoord:qk]' />
        </groupfilter>
      </group>
      <mapped-images>
        <mapped-image caption='basketball-court' expression='file:///Users/ColeFisher/Projects/UWO_Analytics/court-reversed.png' name='[MappedImage1]'>
          <mapping bottom='0' left='0' right='500' top='472' x='[xcoord]' y='[ycoord]' />
          <image-options desaturate-image='true' desaturate-pct='0.38' show-entire-image='true' />
        </mapped-image>
      </mapped-images>
      <layout dim-ordering='alphabetic' dim-percentage='0.544465' measure-ordering='alphabetic' measure-percentage='0.455535' rowDisplayCount='150' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nf67000w5hs9516r7o8p1jhzvq8].[avg:passes:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nf67000w5hs9516r7o8p1jhzvq8].[avg:screens:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:result:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;make&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;foul&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;to&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;oreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;miss&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:contested:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;none&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;high&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>%null%</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;low&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;loq&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;med&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;hq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;oreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fb&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:result:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;make&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;foul&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;to&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;oreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;miss&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:result:qk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;make&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;foul&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;to&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;oreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;miss&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[cnt:contested:qk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;none&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;high&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;low&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;loq&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;med&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[fVal:sum:Calculation_3907646738084331520:ok]' type='shape'>
            <map to='circle'>
              <bucket>1</bucket>
            </map>
            <map to='times'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:contested:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;none&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;high&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;med&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;low&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='shot chart' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Shot Clock' />
        <param name='target' value='shot chart' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Western_Skill'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Western&apos;s Actual Performance vs Expected Performance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gameData_edited' name='federated.1nf67000w5hs9516r7o8p1jhzvq8' />
          </datasources>
          <datasource-dependencies datasource='federated.1nf67000w5hs9516r7o8p1jhzvq8'>
            <column caption='[Result]==&apos;miss&apos;' datatype='boolean' name='[Calculation_3907646738089275395]' role='dimension' type='nominal' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='[result]==&apos;miss&apos;' />
              <aliases>
                <alias key='false' value='Good Result' />
                <alias key='true' value='Bad Result' />
              </aliases>
            </column>
            <column-instance column='[contested]' derivation='Count' name='[cnt:contested:qk]' pivot='key' type='quantitative' />
            <column caption='Contested' datatype='string' name='[contested]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;high&quot;' value='high contest' />
                <alias key='&quot;low&quot;' value='low contest' />
                <alias key='&quot;med&quot;' value='medium contest' />
                <alias key='&quot;none&quot;' value='no contest' />
              </aliases>
            </column>
            <column caption='Game ID' datatype='date' name='[gameID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_3907646738089275395]' derivation='None' name='[none:Calculation_3907646738089275395:nk]' pivot='key' type='nominal' />
            <column-instance column='[contested]' derivation='None' name='[none:contested:nk]' pivot='key' type='nominal' />
            <column-instance column='[gameID]' derivation='None' name='[none:gameID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[result]' derivation='None' name='[none:result:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;fb&quot;' value='Fast Break' />
                <alias key='&quot;hq&quot;' value='Half Court' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:contested:nk]' />
              <groupfilter function='member' level='[none:contested:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;none&quot;</bucket>
              <bucket>&quot;low&quot;</bucket>
              <bucket>&quot;med&quot;</bucket>
              <bucket>&quot;high&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:gameID:ok]'>
            <groupfilter from='#2017-10-07#' function='range' level='[none:gameID:ok]' to='#2017-11-03#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;hq&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]</column>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</column>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:gameID:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[cnt:contested:qk]' scope='rows' value='Number of Shots' />
            <format attr='subtitle' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[cnt:contested:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[cnt:contested:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:result:nk]' />
              <text column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:result:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[cnt:contested:qk]</rows>
        <cols>([federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk] / ([federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk] / [federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_3907646738089275395:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='contested distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='gameData_edited' name='federated.1nf67000w5hs9516r7o8p1jhzvq8' />
          </datasources>
          <datasource-dependencies datasource='federated.1nf67000w5hs9516r7o8p1jhzvq8'>
            <column-instance column='[contested]' derivation='Count' name='[cnt:contested:qk]' pivot='key' type='quantitative' />
            <column caption='Contested' datatype='string' name='[contested]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;high&quot;' value='high contest' />
                <alias key='&quot;low&quot;' value='low contest' />
                <alias key='&quot;med&quot;' value='medium contest' />
                <alias key='&quot;none&quot;' value='no contest' />
              </aliases>
            </column>
            <column-instance column='[contested]' derivation='None' name='[none:contested:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:contested:nk]' />
              <groupfilter function='member' level='[none:contested:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;none&quot;</bucket>
              <bucket>&quot;low&quot;</bucket>
              <bucket>&quot;med&quot;</bucket>
              <bucket>&quot;high&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[cnt:contested:qk]</rows>
        <cols>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='passes dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='gameData_edited' name='federated.1nf67000w5hs9516r7o8p1jhzvq8' />
          </datasources>
          <datasource-dependencies datasource='federated.1nf67000w5hs9516r7o8p1jhzvq8'>
            <column aggregation='None' datatype='integer' name='[Passes (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[passes]' peg='0' size='1.424' />
            </column>
            <column-instance column='[passes]' derivation='Count' name='[cnt:passes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Passes (bin)]' derivation='None' name='[none:Passes (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Passes' datatype='integer' name='[passes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[cnt:passes:qk]</rows>
        <cols>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Passes (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Passes (bin):qk]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='screens dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='gameData_edited' name='federated.1nf67000w5hs9516r7o8p1jhzvq8' />
          </datasources>
          <datasource-dependencies datasource='federated.1nf67000w5hs9516r7o8p1jhzvq8'>
            <column aggregation='None' datatype='integer' name='[Screens (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-1' formula='[screens]' peg='0' size='0.865' />
            </column>
            <column-instance column='[screens]' derivation='Count' name='[cnt:screens:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Screens (bin)]' derivation='None' name='[none:Screens (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Screens' datatype='integer' name='[screens]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='597' />
                <format attr='maxheight' value='597' />
                <format attr='minwidth' value='300' />
                <format attr='maxwidth' value='300' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[cnt:screens:qk]</rows>
        <cols>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Screens (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Screens (bin):qk]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='shot chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Fast Break Shot Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gameData_edited' name='federated.1nf67000w5hs9516r7o8p1jhzvq8' />
          </datasources>
          <datasource-dependencies datasource='federated.1nf67000w5hs9516r7o8p1jhzvq8'>
            <column caption='passes+screens' datatype='integer' name='[Calculation_2257851527290048512]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[passes] + [screens]' />
            </column>
            <column caption='Contested' datatype='string' name='[contested]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;high&quot;' value='high contest' />
                <alias key='&quot;low&quot;' value='low contest' />
                <alias key='&quot;med&quot;' value='medium contest' />
                <alias key='&quot;none&quot;' value='no contest' />
              </aliases>
            </column>
            <column caption='Game ID' datatype='date' name='[gameID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2257851527290048512]' derivation='None' name='[none:Calculation_2257851527290048512:qk]' pivot='key' type='quantitative' />
            <column-instance column='[contested]' derivation='None' name='[none:contested:nk]' pivot='key' type='nominal' />
            <column-instance column='[gameID]' derivation='None' name='[none:gameID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[xcoord]' derivation='None' name='[none:xcoord:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ycoord]' derivation='None' name='[none:ycoord:qk]' pivot='key' type='quantitative' />
            <column caption='Passes' datatype='integer' name='[passes]' role='measure' type='quantitative' />
            <column caption='Screens' datatype='integer' name='[screens]' role='measure' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;fb&quot;' value='Fast Break' />
                <alias key='&quot;hq&quot;' value='Half Court' />
              </aliases>
            </column>
            <column caption='Xcoord' datatype='integer' name='[xcoord]' role='measure' type='quantitative' />
            <column caption='Ycoord' datatype='integer' name='[ycoord]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[Exclusions (Contested,passes+screens,Xcoord,Ycoord)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:contested:nk]' />
                <groupfilter function='level-members' level='[none:Calculation_2257851527290048512:qk]' />
                <groupfilter function='level-members' level='[none:xcoord:qk]' />
                <groupfilter function='level-members' level='[none:ycoord:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:contested:nk]' member='&quot;high&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:xcoord:qk]' member='0' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:ycoord:qk]' member='0' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Calculation_2257851527290048512:qk]' member='4' />
                        <groupfilter function='member' level='[none:Calculation_2257851527290048512:qk]' member='7' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:contested:nk]' />
                  <hierarchy name='[none:Calculation_2257851527290048512:qk]' />
                  <hierarchy name='[none:xcoord:qk]' />
                  <hierarchy name='[none:ycoord:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:contested:nk]' />
              <groupfilter function='member' level='[none:contested:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:gameID:ok]'>
            <groupfilter from='#2017-10-07#' function='range' level='[none:gameID:ok]' to='#2017-11-03#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;fb&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:gameID:ok]</column>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</column>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]</column>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[Exclusions (Contested,passes+screens,Xcoord,Ycoord)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:ycoord:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:ycoord:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:xcoord:qk]' field-type='quantitative' major-show='false' max='512' min='0' minor-show='false' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:ycoord:qk]' field-type='quantitative' major-show='false' max='478' min='-6' minor-origin='0' minor-show='false' minor-spacing='10' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:ycoord:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:xcoord:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:xcoord:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:xcoord:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_2257851527290048512:qk]' field-type='quantitative' max-size='1' min-size='0' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_2257851527290048512:qk]' value='100' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_2257851527290048512:qk]' value='# Passes + Screens'>
              <formatted-text>
                <run># Passes + Screens</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]' />
              <size column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_2257851527290048512:qk]' />
              <lod column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
                <format attr='shape' value='times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:ycoord:qk]</rows>
        <cols>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:xcoord:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='shot types avg passes/screens'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Relationship between #Screens/#Passes and Shot contest level</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gameData_edited' name='federated.1nf67000w5hs9516r7o8p1jhzvq8' />
          </datasources>
          <datasource-dependencies datasource='federated.1nf67000w5hs9516r7o8p1jhzvq8'>
            <column-instance column='[passes]' derivation='Avg' name='[avg:passes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[screens]' derivation='Avg' name='[avg:screens:qk]' pivot='key' type='quantitative' />
            <column caption='Contested' datatype='string' name='[contested]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;high&quot;' value='high contest' />
                <alias key='&quot;low&quot;' value='low contest' />
                <alias key='&quot;med&quot;' value='medium contest' />
                <alias key='&quot;none&quot;' value='no contest' />
              </aliases>
            </column>
            <column caption='Game ID' datatype='date' name='[gameID]' role='dimension' type='ordinal' />
            <column-instance column='[contested]' derivation='None' name='[none:contested:nk]' pivot='key' type='nominal' />
            <column-instance column='[gameID]' derivation='None' name='[none:gameID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Passes' datatype='integer' name='[passes]' role='measure' type='quantitative' />
            <column caption='Screens' datatype='integer' name='[screens]' role='measure' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;fb&quot;' value='Fast Break' />
                <alias key='&quot;hq&quot;' value='Half Court' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nf67000w5hs9516r7o8p1jhzvq8].[avg:passes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nf67000w5hs9516r7o8p1jhzvq8].[avg:screens:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:contested:nk]' />
              <groupfilter function='member' level='[none:contested:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;none&quot;</bucket>
              <bucket>&quot;low&quot;</bucket>
              <bucket>&quot;med&quot;</bucket>
              <bucket>&quot;high&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:gameID:ok]'>
            <groupfilter from='#2017-10-07#' function='range' level='[none:gameID:ok]' to='#2017-11-03#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:type:nk]' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;oreb&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[:Measure Names]</column>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:gameID:ok]</column>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</column>
            <column>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[Multiple Values]' value='63' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[:Measure Names]' value='59' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[Multiple Values]</rows>
        <cols>([federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk] / [federated.1nf67000w5hs9516r7o8p1jhzvq8].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='passes dist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='screens dist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:AdhocCluster:1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='shot chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='118'>
            <card pane-specification-id='0' param='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]' size='135' type='color' />
            <card pane-specification-id='0' param='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_2257851527290048512:qk]' size='749' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:xcoord:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:ycoord:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_2257851527290048512:qk]</field>
                  <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</field>
                  <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:xcoord:qk]</field>
                  <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:ycoord:qk]</field>
                  <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[sum:Calculation_3907646738084331520:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>&quot;high&quot;</value>
                <value>0</value>
                <value>0</value>
                <value>1</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[attr:gameID:ok]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:AdhocCluster:2:ok]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:gameID:ok]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:shooter:ok]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:xcoord:qk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:ycoord:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='16' />
      </viewpoint>
    </window>
    <window class='worksheet' name='shot types avg passes/screens'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14ns20s101ri2w19d3b8v06os7a8].[none:contested:nk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[attr:gameID:ok]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_3907646738084331520:qk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:gameID:ok]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:result:nk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:shot_clock:qk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Western_Skill'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_3907646738089205762:nk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:Calculation_3907646738089275395:nk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:gameID:ok]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:result:nk]</field>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='contested distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1nf67000w5hs9516r7o8p1jhzvq8].[none:contested:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Western_Skill' width='384'>
      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
      NcMwqKysjHcZ3crRIbbbqktJxEQiEaqrq0/YOxSt06VaMjU1Ve4I1sYqKyvJzMz8+heKM+I4
      jrRrG6uvryc9Pb3djwG4SWfsghNCCNEBJACEEMKlJACEEMKlJACEEMKlJACEEMKlJACEEMKl
      JACEEMKlJACEEMKlJACEEMKlJACEEMKlJACEEMKlJACEEMKlJACEEMKlJACEEMKlJACEEMKl
      JACEEMKlJACEEMKlJACEEMKlJACEEMKlutQ9gYUQHcOJ1OMEK+NXgO5HTc6L3/xdQgJACHES
      44sVRN76z7jNX+sxgYTrH4/b/N1CuoCEEMKlJACEEMKlJACEEMKlJACEEMKlJACEEMKlJACE
      EMKlOvw00GgkxMH9BzAcld6FhQR8HnAcSg8foLy6kb79B5Do93R0WUII4TodugfgmCGWPPs0
      m3fsZveOTTz09wXUhQz2blvPU88t52DxDh57/AkaI1ZHliWEEK7UsXsAmo/rb/4GHo+OY1tU
      LniU+oYg77+/jnm3fYvCrAScxY/zxf5Sxg0s6NDShBDCbTo0ABRFBbOe9z7YyL6iXWiZfclO
      9VIbCdAjKxGAAQP7UlRZDwMhGo1i2zYAhmEQiURQVTls0ZZs2yYYDMa7jG4lGo0CdOl2dQwj
      rvO3bOuk9jNNk1AohGmacaqq++nwYwCK5iEpKZm09HQOHDlIMGLgqApK8wuaH+H1eo9Npygo
      ikJCQkLHFtzNqaoqbdrGQqEQjuN06XaNejxE4jh/TdVOaj9d1wkEAiesF0TrdOwxAMdB8wQY
      O348l8+dR/8MjT1HaknTGzlUFUv74l3FZGcmdWRZQgjhSh26BxCpr+bppxeTW9gPDxG2Hqzh
      1oszyZg2ieeeXMToAXlsLoe7e+d2ZFlCCOFKHRoAvuR0rr3hOsorq3FQmHzeLFKTAmSlTOK2
      1Fwq68NMOb8viT4ZpFQIIdpbBx8EVkhJzyQlPfOk5/N69kFG/xZCiI4jp9QIIYRLSQAIIYRL
      SQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRL
      SQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRL
      SQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRL
      SQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRL
      SQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRLSQAIIYRL6R09Q8exKTmwj5r6ML369iUl
      wY9lhCktrwJAUTWysrPxaJJNQgjRnjo0ABwrypJnniCipZGT5mf5itXMv/tOGvdu4MW12+nX
      MxdQmDx9BtkpSR1ZmhBCuE7H7gEoCtNmXUl+Xg4KDnWlj1BZ10hlaSWTp81i8ojCDi1HCCHc
      rEMDQFE9FOTlYFsmH7+7krKolx5ZqeypLmPf3nc5tDOJvoNGMHrYAFRVIRqNYts2AIZhEIlE
      UFXpGmpLtm0TDAbjXUa3Eo1GAbp0uzqGEdf5W7Z1UvuZpkkoFMI0zThV1f10+DEAI1zP0wsW
      oOcN5o5v3kbAq3H+nBsJRQyCdTUsX/Y8SuAWxvTPx+v1Nk+nKAqKopCQkNDRJXdrqqpKm7ax
      UCiE4zhdul2jHg+ROM5fU7WT2k/XdQKBwAnrBdE6HRsAjsXyJU/Tc+wsLjxnGIqiAA6OqpOW
      lkhaWhrjRwygvLqhQ8sSQgg36tAAsKIhaiMqOUoD69atAxSGjBhB0dbPqA0ZqDjU1GpMHd+j
      I8sSQghX6tAA0HxJfOPO+Sc9P3bSudiWhWXb6LretGcghBCiPXX4MYDTUTUNVdPiXYYQQriG
      nFIjhBAuJQEghBAuJQEghBAuJQEghBAu1WkOAgvR3dm2jWFH4zZ/BQWv7ovb/N3OcRwww/Et
      QvehKMe2+yUAhOggW458zu/e/HXc5p+ZmM2f5z0St/m7nmPT8JeJcS0h8ZvLUdKPjbkmXUBC
      COFSEgBCCOFSEgBCCOFSEgBCCOFSEgBCCOFSEgBCdDKJ/gx6phagtXBQREXRSPHJLVTFmZMA
      EKITSU0ZzE/O/zFTCycT0Fs2OGJiIJfrR13dzpWJ7kgCQIhOQlF0huWPYfv+Nbz2xSoaDZOA
      N5Xe6X1I8vgB0FQvXjUWDLrmw6NqgIKuySU94szJUiO6NMdxwLHiW4Sitck9LPz+As7vMxGf
      U0NiQgFr9m3iGxNupqh8FwNzBrDg3fvwZZ/HQOcAr+7dxMg+c8kwNvJxRde993BbsOz4fv+q
      onbZe5hIAIguzanZR+Pjl8e1hqQfbQJavwIIhfbz+q4PyLC+4K19W5k77ges2PA31pXuY1DP
      WZzfbyof1iuoSmwPQEHpsiuetvTDF++iKlgRt/nfO+s/GFkwJm7zbw3pAhKik/JoGtXhOgCq
      Q+V4NH+cKxLdjQSAEJ3U/tpDzOh/PumBDGb0n8mB6iIcxyErJY/MxDyG5g2Md4mii5MAEKIT
      Ka/dzf66SgA+3f0KB41Ebhp/O3bDVlbv28z+wx9j+vtx9YgrqavZxr7aKgyjgc9KNse5ctEV
      yTEAITqRg5Wbmh9bdojXNz954gsiFTzx8UMnTffR/k/auzTRDckegBBCuJQEgBBCuJQEgBBC
      uJQEgBBCuJQEgBBCuJScBSREB3EsH2ZDXtzmbysZcZu36JwkAIToIHY4ncjB8+M2/0haQtzm
      LTon6QISQgiXkgAQQgiXkgAQQgiXkgAQQgiXkgAQQgiXkgAQQgiXkgAQQgiXkgAQQgiXkgAQ
      QgiXkgAQQgiXkgAQQgiXkgAQQgiXkgAQQgiXkgAQQgiXkgAQQgiXkgAQQgiX6jwB4Dg4jhPv
      KoQQwjU6/I5glaUHeO+9D6ioDTJi3DlMGjMUxwyzavkrHKho4JzpMxk5qHdHlyWEEK7ToXsA
      thHkjbfeYfDYKVw/7wo2vLOKgxV1fLjqZRp9+Vx/9SWsfnUJR2qCHVmWEEK4UofuASh6gOuv
      vwld1zCjQXweBwWDL4oruW7+taR4Vc4d3Y8de4+QN6Yftm03T+s4DrZtn/CcaBtduU07Q+22
      baMox352mrozv1ybbce3i9NxWt5e8e6OdTi5/U6/DohvrfYpvutTcTrDshpbCJp/7tgAUBQ0
      TaW69ADPPvcC/cZMpSA1QKOpk+iN7Yxk5GRT1WjEij3uyzZNE9M0iUajHVlyt2fbdpduU8c0
      410CRtTg+ASwLAvHcU5qVyvutZ5c0+nYltXOtXy1U7WfbdsYhnGKF3dQUafR4vWSE/8AMAwD
      5bhaO/gYgEPp3u0seOo1rr3tFgYW5oMdxaeDaTtoqkK4oQFNz4kVpx8r7+gWid/v79iSuzlV
      Vbt0m9ohL/Ferfr8PhTlWG9qY2MjjuOc1K4er6ejSzuBoigt/q6juk48I0BVTl4uNU3D5/Ph
      9XpPfPHxu19x4PV4WtSujm1xivjqUD6vF/W4Wjv0GIBjRVm27DVuu/tuBhXmowCK6qFnpsIn
      W/dhmxE+3riTfr1zOrIsIYRwpVbtARQXF1NVVUVhYSEPPPAAhYWFzJ8/H+U0iWxFo3i8Gkuf
      WRDbbVO8zLv5Fi645Ar++dQSNq1VKBg0kcKc1NaUJYQQogVaFQDvvPMOI0aMYMWKFUycOJHP
      PvuM0tJS8vLyTj2zQDJ3fPfHp/hNMt+5+25My8br8Zw2QIQQQrSdVnUBeb1e9u/fz4YNGzj3
      3HPxer1nffaApun4vF5Z+QshRAdpVQBcdtll7Nq1ixkzZpCWlkZ6evppt/6FEEJ0Lq0KgMOH
      D3Prrbcyd+5cPB4Po0ePJhQKtVVtQgjRJmaP+jY/n/nvTOkxoIVTKFwz8W7SO89gOe3irD6e
      4zhYlsXGjRspKirCsiwMw+Dll1+moqKirWsUQoizpyQzMa+Ah975PR8d2g2AR/PjUbWvnCwl
      MQu1m/dIn/VB4IceeojVq1fj8/lYtGgRjuOQlZVFQUFBW9YnhBCtoHDVuDvplXB5LzYAACAA
      SURBVNqbu8/7Ce/ueJ7EjHOYnFeIouis3vokn5Yf5oZRV/LUhmfQPNncMuI8nti4NN6Fd4iz
      DoC77rqLIUOGkJWVxZAhQ5ovMpGDuEKIzsPhpY1P0D/5Bh54+68kJg3ih8NyuH/Nb/EFCvn+
      lBvY9u7fyElsuvZI9ZCVmB7fkjvQWXUBKYqCz+dj9uzZVFZWct999/Hggw+yd+/eNi5PCCFa
      yYldduQAfl8mhyo+J2o71DfupcLwkOT56q6g7qxVhzjeeOMN1q5dy0033cS0adP4zW9+Q319
      fVvVJoQQbSoSqaRn1hi8CiQl9CHbY9JgWnj02PASKf4MdLWbH/k9TqsuBNu6dSvXXnstw4YN
      w3Ec3n//fQ4dOsSQIUPaqj4hhGglk/KG2MkpdQ27ef9IKT86/15UzcubW56iIRriQNDmJ+f/
      HNNxqGncA0BV/SGM+I/f1q5aFQDTp0/nkUceYebMmdTU1LBv3z769u3bVrUJIUTrObUs+mRx
      0w82q7cu4v2dCTh2lKgVG0rwmY8fIODxEjbCzYOLvvzpwriU25FaFQATJkwgKSmJ9evXk5SU
      xG9/+1t8Pl9b1SaEEO0iYnz5plM2ISMcl1riqVWdXQ0NDezcuRO/349lWaxcubJLjy0vhBBu
      0qoAeO6559i0aROqqjb/E0II0TW0qgsoLS2Nfv36ceGFF7ZVPUIIITrIWQXA9u3bWb58OfX1
      9ezbt48NGzY0/+573/tel77DlBBCuMVZBUBubi7nn3/+qd9Q7+C7TAohhDgrZ9Vpn56ejq7r
      DB8+nAkTJqDrOhs3biQzMxNNc+9VdUII0ZWcVQAEg0H+9Kc/Nd8Q5g9/+AM5OTn85je/wTTj
      fYtuIYQQLXFWARAKhcjMzERVVVauXMnFF1/MlVdeSV5eHuXl5W1doxBCiHZwVgGQnJxMQ0MD
      r7zyCmvWrOHCCy/EsixKS0tJSUlp6xqFEEK0g7MKAJ/Px7333ktVVRU/+9nPyM/Pp76+nlmz
      ZpGYmNjWNQohhGgHZ33KTmFhId/85jebf05PT+fGG29si5qEEEJ0gLMKgKPDPTiOg6qqeDye
      Ni1KCCFE+zurAHjrrbdITEyksrKSHj16MGnSpLauSwghRDs7qwDo06cPDzzwAIqikJiYyDvv
      vNP8u+9///tyJbAQQnQBZxUAQ4YM4Re/+AXPPPMMOTk5DB8+/NgbypXAQgjRJZzV2lpRFHr1
      6sWPf/xj6uvr2blzJwkJCQwfPlyuBBZCiC6iVZvr+/fv53e/+x2DBg2ivr6exYsX8+tf/1pC
      oIuzbJvHlm+Maw03XjiClES5uZAQ7alVAfDqq6/yne98h4kTJ2LbNr/97W8pLi5mwIABbVWf
      iAPHgeUf7oprDVdOHSwBIEQ7a9UdXHJzc/n888+pq6ujtLSUkpIS0tLS2qo2IYQQ7ahVewBX
      X301jz32GD/4wQ/w+XzceuutZGZmtlVtQggh2lGrAsDn83HPPfdwzz33ALGDw0IIIbqGVp+z
      KSt9IYTomlp1DODtt99mzZo1bVWLEEKIDtSqACgsLGTFihVUV1fjOE7zPyGEEJ1fq7qA9u3b
      x4EDB7jzzjvJz88H4P777ychIaFNihNCCNF+WhUAkydPZuTIkSc8J+MACSFE19CqLiBVVVmx
      YgX3338/tbW1vPzyy21VlxBCiHbWqgBYunQpiqIwaNAgotEoBw8epKqqqq1qE0II0Y5aFQDl
      5eWMGTOGtLQ0LMuitrYW0zTbqjYhRBdUUhlhV7WsB7qCVh0DmDdvHvfddx8VFRXous7gwYPJ
      zc1tq9qEEF3QoaoIwYCPgekyNHxn16pvqKCggP/93//l0KFD+Hw+cnNz5cIwIbq5vUeCPLep
      kb2VEVSPzrgcjQ/2RRjWJ4kfTUsj1atRZznUNET5n1UVVIYdxgxM5q7xSfxjdQUby6Jkp/n4
      yawsUj2yvoinVgVAaWkp999/PzU1NTiOwzXXXMOcOXMkBIToxkprInxeZnLfnFwWrDzMQTuF
      /56bxo+eOUT5pFQOl4fZpnqpLm5EzUjkV2MS2FIWpfxwkGUHTB69Jo99pWEMO96fRLTqGMCy
      ZcuYMmUKDz30EL/73e946aWXaGhoaKvahBCd1NjCBArTPeSn6kzpm0huioecBBXDjl0IqgCj
      +iayflMV/72qAlVTScvwkR6Ncu/LpeyosUmRHqK4O6sAsG0b0zTJy8sjMzMTXdfJyMigsLAQ
      wzDaukYhRBfUr2cSL91dyLcnJPNfLx8h6NF5/NuF/OfFmazbVs2b+6PxLtH1ziqD161bx8MP
      P4xt2wSDQRYtWgRANBolKSnpK6d1HIdDxTv44kA1F0w/F1WBxqpDrHpnfWyzQdU474KZZCbL
      1cRCdFZHB3xRFFCbenyPbk06CqiKwgtrK3hpb4SeiQqJSV7KDwX54fIKRhf42FNrU5gidw6M
      t7MKgIkTJzJu3LhT/s7j8XzFlA5vvfgsxbUhampNZkw/FxU4tHsHJGdz7qiBgEJSwHs2ZQkh
      OsCEQWmMGxh7fMesPNSmY36/u6knHk2hYEwGUwFNSeSCsSYNUYeCNA8+DZ79Zg9KG2x+erFO
      mr9VPdCiDZxVAGiahqZp7N69m3/+858ndPv86le/IhAInHbac2ZfzoUJNn/583PNz5VUVJHX
      YzxJScn4A/7mBcq2jx0lsm0b27axLOtsShZf4cttatvxH9Cvpd+1Y8f/SGJsOT3WZkcHRexs
      7eo4J3/Xp3/t6WvVVIWj2+4e7dhK3Kc3PdZo/n1Oioec46ZNDugkn371cGz+nNx+juOcZrmI
      b7vap/iuT8npBMuqY+McV2urDsOsXLmSESNGMGHChObnvN6v2npXSEpJBqv2hGeTk5LYtvlD
      tq1rwPKkcuMN15Ac8Dav9CG24JqmKccY2pht2ye1qdUJAsA0WvZdO53gwsNYncfOfLMsC8dx
      Tm5XK961nlzT6dhx3tA6VfudalkFCB+YQaiusaNKO0m0PhUjswXt2gkCwDRMOK4NWxUAI0eO
      pKKigsLCwubnVPXMd+vGT7+U8QCOzdsvP8WnOw5w/tj+6Pqx8o5ukchgc21LVdWT2tS04r+g
      en3eFn3XdshLvFerPp8PRTm23Dc2NuI4zkn1f3X3aPtTFKXFfz9RXSeeEaAqJy+Xmqbh8/lO
      2sh0omnYkfh1G3u0hBa1q2NbxHvz1ev1oh5Xa6sCIBwOs3DhQpYtW9b83EMPPURiYuLXTKkc
      22ByLLZu3UG/QYPx6wqNjWHSvfH9QxFCCDdoVQAUFxfz05/+lClTpjQ/p2mnP7LvmGFeXPIc
      ZTWNGFaYR//2V8696Eqs2lIW/GMNmkclPa8vMwf1aE1ZQgghWqBVATB06FDWrFlDNHrsfN7p
      06efdldX0f3Mu+kbJ/9iQE9GnzMD23HQNE2uJBZCiA7QqgBIT0+noKCA4uLi5uemTZt2Vu+l
      alrrLksWQghxRloVAIMGDaJ3794nPPfVZwEJIYToLFoVAGvXrmXx4sVA7BStAwcO8MILL8g9
      gYUQogtoVQBccMEFnH/++UDsNM1f/OIXJ1y8JYQQovNqVQBUVFRQUlICxAKgoqKCioqKrx0P
      SAghRPy1KgD27t3LypUrm3+eOnUqvXr1anVRQggh2l+rAmDixIlMnDixrWoRQgjRgc4qAILB
      IP/6r/96wrgcjuNQVlbGs88+K11AQgjRBZxVAAQCAR544AEgNvDVli1bWLJkCb169cLn87Vp
      gUIIIdrHWQWAoih4vV62bt3K4sWLCQQC3HXXXQwYMOCsBoMTQgjR8c4qACKRCL/85S9RVZUb
      b7yRAQMGoCgK4XCYQCAgQzkIIUQXcFYBYFkWFRUVaJrGQw89dMLv/vjHP8qFYEII0QWc9TGA
      Rx555JS/k61/IYToGs76GICs6IUQomuTI7ZCCOFSEgBCCOFSEgBCCOFSEgBCdDG6RyfgkT9d
      0XqyFAnRxZwzZhBjC1PiXYboBlo1GJwQovUCPg+appKZHKCmrgF0L2kJOkcq6olYDn6fh/Qk
      H5ZpUVEXQtc1DGJn4QX8XkzDwLAgJzOJBF2hpKKeqOXE+VOJrkACQIg4u3r2REbledhT2sCo
      AbmUHKki6Og0lB7msbeLuemyiejREDk5aWzdtJOapulS01L5ybVj+NtzH1A4dCCzB6VS0uiQ
      ZNTz4KtbkVszia8jXUBCxJtj8vDSdTyy/DOOlNXy+2c/4rGVm0lPSQLH5pnXN/Dp7lI+3FbC
      iMJsADLSk/nBdRNY8tqnHA7CRSNz+esL63ly+afo6ZnkJMm2nfh6spQIEXcOjnNil43jxP55
      fAn88hvn8sHGIiKaiuUAisKkkf3wOxGKK4Ioqge/38+8WaNBgWBNLWHpAhItIHsAQnQCp7uw
      3hsIYIfq+XjHEUwUPCrgOLz+7ucs21TFd+eOIaBY7KsKsrf4EEvf+4Lth+pA1v/diuM4HK4z
      cdr4e5UAECLOthcdoSZkgmPzwdaDOA5EwxHW7y4jWFvN2uIg1184jBQM1n5RxoGSckpqwqxd
      t513d9fSO8vPU69+Sk6vfK6aNogExaIxasX7Y4k25Fgm//1WJW39rUoXkBBxtnH7gebHaz7b
      B4ARCvPutsMAvP7u5tNO++HGPc2PF63Y2E4Vinbn2LyzK0hDyGR3tcVFw5L4ZHcjUU3lhnGp
      JOo6149MQsFh+4Eg7+0Lk5bkYe6oZBobDF7e0gCaykXDkylI0lo8W9kDEEKIeLNtfr3sCNtr
      bLIUi6sfO4gW0Nmxq45lRSEcHP72diX19VF+9Eo5+eleKsrD7Gl0+MWLJYQ0jSTF5sODkTOa
      rewBCCFEJ5CX6eeHMzKIVjXyernCzWNTyI9G2RKKndCrApqqErBsNhyKcNGQFIYlq+QEVDbs
      C3LVyGTO7x84o3nKHoBwLdOyKW+UvnLRdfgSPfzzW72Y2sPDn1ccZtnuMPde3YN7JqbwyY5a
      /n1V1Rm9nwSAcK3y6jB//qjm618oREdwjp28daqTwhwUyirC/NeqShpthRSfimE5/PaVUrZV
      mWQlaUSMMztNSLqARLfl2LEDa5X1BuVRmD0wgXe/aMCf7OW6kUmkJ/u4fKAKjsOnRQ1sOGLQ
      K8vHrEEJlFdFeO2LIIl+jUuGJ5Pmk20l0Y5UjX+7OAsd0JL9/Gy6B4AxQ1Lor6goKPx/l2ZT
      kOnj5jFJbC83uOrcbC4eFGByhsIH+8Lk5SRw65CkM5ttO3wUIToH2+Sepw9TYSrUVwS56anD
      pKR4eHVtOeuqLOoaDBaur6GmIsiP36gmP1Vn6/4ghxtsvvtsCcmJOsH6KBvLzXh/EtHdKQqj
      evpj/fwejRE5XgDSU730TtFRFIXhPfyoqsK4vkncMimdSwYloAC9sv3cMCGNeaNTSD3DDRXZ
      AxDd2qg+icw/J41tuxzqk1XmjUqh9mADVSEbEmK72rqu4oRNdleZXDwqlYKAQoZHYcOhMJcO
      SWJKvifeH0OIdiF7AKJba8mdq5PSA7xwR08KExXuff4Qn1VZPHh7by7rF2Dx+xX87ZOGdq9T
      iHiQABDd2qkOqilf+v2u4gb+8H4tXp9GokehPmTx65dLqTIccpI0glEZV1N0T9IFJLovVeff
      ZmegAIUFSdyeGVv1z56YgTdJJ1Vz+OG0dAZke7gsbLO31uJfLsplWm8f+Xoa6w5GGDUghUuG
      ntmBNSG6CgkA0W0pqsrYnn4AkhI9DEiMPd8z29/8miG5scvmZwxNYcZx0w7ukcDgHgkdVaoQ
      cSFdQEII4VISAEII4VISAKJdqacb6F4IEXcSAKLdZGRmMm9qYbzLEEKchgSAOGNej45Hi23Z
      B3yeExYiVVXwaGrT6zykJpx8EZWiKiQF5OIqIeJNzgISLTZscD9uPa83jWGT1CQfZbURPJqC
      GazjgRc/Z9KkYcwakomtahwoPsDKLxqbplS4Yc4EynYXsbHM5F+uGkuwMYLPifDACxuJ2HL/
      QiHiQfYARIvpHo0tO4r57yfX8umBRtZ+tIn7nlyLkpRKgkdh09YiHnrpEx59ZQP9+vci2aOi
      aRoXThtJtt3AuzsruWDyYD7+aCsPPv8x+40A43omxvtjCeFasgcgzkh9MIIDmKZNXSgKOERM
      B0VRmD11OIMydMrrIiTqKooCo4f2ZbKu8PMHX8dyIDUxwNCxAxg6tC9JiTpFmhwkFiJeOk8A
      OA6246CqslPSFSm6l1E9E7n/8XfRkxL5ybUTAfh0y24+LXH4wQ2T+d1TH1FZH6Sm+BAvbSgh
      PT2FgH1mt7ATQrSdDg+AUF01777zJsUVFvO/eSOaAnXlB3n8n89iqwo9Bo/l6ksvQFdly7Cz
      aWgIUemNAlBWWUdDOHY3rf1HajCiET7YU8NPbptOJBzhcFkNwXCEI1UKn205hM+jctG4nry+
      divfmjOGe4f2w7FMnn59Qzw/khCu1sEB4PDeqjdJ6FFAaPfW2EBdjs3bK19jyuU3MH5gHk8/
      9neKD49hYI+Mji1NfK2ivQcpanr83ic7mp9funozAKve2cTb72uYptU8CNuBstj/H2/c2fz6
      vy75AF1TMS0ZZE2IeOrgAFCYfc21KHYdGz/cCoDjGBypUbh4UE9UVWHsqEEUH6pgYI8MTNPE
      cWKrEtM0MQyDSES6DNqS4zgntanVirNyDLNl99j9upW/EW3Zd+0YRovm156i0SjHjzFqmrEb
      yHy5fsOI741lTvVdn45txfdeybZjn1SrbdtEo9HmdcJRX/65oxlmC9dLTvw3eKKGgXJcrR3e
      BaR8+cpQyyJk0tzl409MxGmMfaGqqjZ/uaqqoqqxs0pE2zq5TeO/oKpay75rR1WJdwRoqgbH
      LddHl9sv16/F/fiW0uK/HyfOV3Arysm1Hn2us60DWrxecuLfra1pKspxtcb9ILCie0jWDeoj
      Nmk+lcrDpSTk9QA44YDw0UbW9biX3K0oinJymyrxD4CWftd2J1gZaLqGopy4rDqOc1L9qhbf
      AFAUWvz3Y8c5rBROXi6PBsCpno8nTW3ZsurY8d2rglit6nG1dui37NgWB/fvo6h4P42hBvYW
      7aGmwWDE0AJefu1NDuzdxbubDzCkT15HliWEEK7UsTHv2BzcX8yuPSWMHTecPbt3URuMMP68
      SylMtvj4081cPu8GslICHVqWEEK4UYf2pyiah3OmnX/K382YdWlHliKEEK4X76NSQgjRKcT/
      EG3HkwAQQrieqvv51qXD4l1Gh5MAEEJ0W7qm4dWPDk+uc/zQU4pybOhyRdXJSfWd8j0S/J5u
      u3cg51QKIbqdnJwcvnfFUCJRi+QELyWVQZICHnQ7wu+fXkefgYXcMKUQ04HaigoefnN/87Tn
      TR5GrlPPS5+V8b3rJqOZBj7F4q9LP6UmEv9TOduS7AEIIbodXdOoqqjk90+t5Y1t1ewvKua+
      RWsptf3kJKgcPFjKn1/4mL8u/YSE7DwKEjQURWHU8H5M75vIig2HGD9mAJV79/HHJR+xvtRg
      xpCseH+sNid7AEKIbqmuMYxpx4Yur20I4+AQjtqoisLoYX25aFgmpTVhcpK9aCr07Z3PD3r3
      4A8LVtFo2qQnJjC4MJ1/ycvF7/fzRW336wiSABBCuIsC5w7L46Hn3qUOne/fcC4Ae/aV8OK6
      Cr555UQeeOZDqhuDFO+tZMHbRQQSAmR2w8uTJACEEN1O1DAorwsDUFffiBqMDcRXVllHxHRY
      u/Uw99wwlahhEg6GCJsWhysb2VV0gGd8GnPP7cfCt3cx6srx3HtLPiiw/O1NHIjnh2oHEgBC
      iG6noqKCVypijz/fsrv5+RVvbwLgyCc72PD5bizLah799olVsSHLt2zfy5btsdc/8uKHeHQN
      y7LojreulgAQQrhStIXDc7d0iPOuSM4CEkIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IA
      EEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IA
      EEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IA
      EEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IAEEIIl5IA
      EEIIl5IAEEIIl9LjXQCAFQ1x8HAZAIqqkZ9fgEeXbBJCiPbUKQKgZMcnvPzRHgYV5uMACWnp
      ZCUnxrssIYTo1jpFABwsq2by1JlMGt4r3qUIIYRrdIoAaKironjvaoq3+Ok9YBiTxg5HU1Wi
      0Si2bQNgGAaRSARVla6htmTbNsFg8ITnLNuJUzXHhMNhgsEWfNfhcPsX8zVCwRAoSvPP0WgU
      4KR2jUSiHVrXlzm2c1JNp32tYbRzNV/Nsq2TajVNk1AohGmaJzzvOPFdXiPRSMva1bHbv5iv
      EQ6H4bhaO0UAzLjsBs4xTEKNdaxYugRvcgbjB/XA6/U2v0ZRFBRFISEhIY6Vdj+qqp7UpqYV
      /wXV7/e36Lu2I34aO6CerxJICKAox8IqFArhOM5J9ft83i9P2qEUteV/P1GPh0g71/NVNFU7
      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
    </thumbnail>
    <thumbnail height='384' name='contested distribution' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='passes dist' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='screens dist' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXxU5aH/8e+ZNZM9gQCBAAJl30RAlLpWVMBdq3VHvdbWtXp/dbmKXby1
      ItpaEW+vrahoe13ApS6IFQEVQUWLEYQAshMCZN9nPef3RyAaA1rIhJn4fN6vl68Xc2by5BnU
      85nznJk5luM4jgAARrEsy3IlehIAgMQgAABgKAIAAIYiAABgKAIAAIYiAABgKAIAAIYiAABg
      KAIAJBvHkeM4OthPaDp7fh74LgQASDJVO7/UfffNUEVNnUpLyxWzD2xnvnjec3rmH4uIAL4T
      AYCZHEcrFr+pX1z3M1166RT96r+nadPumkTPSna0UY88MF2ZfYfIVb1eV/ziLlXUhVs8ZsPH
      b+rC6/5LdaHoPscYdcQYzXvqYX28sexQTBkdGAGAkRrKNuie+/6kQUdP1M9+eqW6pMa0cWdT
      AOxYVBXl5WoIhiRJ0UhEtuMoGg4rGrObfr62WiUluxTZc7vpcSGV7ChRbX1QkuTYtiKRaPN4
      wchXO+yG+lpV19S2enW/8bMl+nhLTJefe5KkmOrqGhSNhFVWVqGo3fS78voO1w1TfqwUr1ux
      WFSxmK1gQ70qKqtlO1J2/g90yVk/1BOznlGUgwB8C0+iJwAkQrihRiHZGjhomMYd3kfHHHec
      bEeqLd2mqXfdra1ltfJndtL9D/5BD99whcafc77m/H22Trv+vzXUu0HTZj4rx+VWTv4QPfjg
      b+Sq2aZf3nqXKhpCCts+3XHPNPUKb9Yt9/xR2TlZ2l1WqdRuI/T4I7/Wor/P1F9ffV9ej1v5
      /Y7Q9N//l1JcTWv3Sxe9o1EnTlSmz6VKSQ1lW/XLG69RbW2teg06TtPu/aXqq7br6bnzNGb0
      4Xrugbu0aP0uRepqVVUb1AXX/JemnH2MJpx2hmZc8SttK6tXn7y0RP91I0lxBAAjZfYYrIkn
      jNGvbrlS11x3k154413ZjqO5T8xQTVo//fXJ2Xrgt7cqN92j6spiPfLX2Zp46bU6cUSB/veR
      WTr/Z3fq77MfU2rVF/rnkpV6Y85suXqM1uxn/k+XnjpSj/9tjmKxoGrrbF1+053607S7VbZq
      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
      GqqWPPN/xLgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='shot chart' width='384'>
      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
      JxIJrf8+mUxSKBQoFouUSqUDg7x6vR69Xo/RaMRsNmOz2QgEAng8HhwOBw6H48BYQuXjC3FS
      JACEOILKoqwWcrvdTk1NDeVyWSv66q/D5w6orXg1TNTvUXlUpRR88aZJAAjxCiqLtVrQX/f7
      CPGmSQAIcQykkIvTSNaNCyFElZIAEEKIKiUBIIQQVUoCQAghqpQEgBBCVCkJACGEqFISAEII
      UaUkAIQQokpJAAghRJWSABBCiColASCEEFVKAkAIIaqUBIAQQlQpCQAhhKhSEgBCCFGlJACE
      EKJKSQAIIUSVkgAQQogqJQEghBBVSgJACCGqlASAEEJUKQkAIYSoUhIAQghRpSQAhBCiSkkA
      CCFElZIAEEKIKiUBIIQQVUoCQAghqpQEgBBCVCkJACGEqFISAEIIUaUkAIQQokpJAAghRJWS
      ABBCiColASCEEFVKAkAIIaqUBIAQQlQpCQAhhKhSEgBCCFGlJACEEKJKSQAIIUSVkgAQQogq
      JQEghBBVSgJACCGqlASAEEJUKQkAIYSoUhIAQghRpSQAhBCiSkkACCFElZIAEEKIKiUBIIQQ
      VUoCQAghqpQEgBBCVCkJACGEqFISAEIIUaUkAIQQokpJAAghRJWSABBCiColASCEEFVKAkAI
      IaqUBIAQQlQpCQAhhKhSEgBCCFGlJACEEKJKSQAIIUSVkgAQQogqJQEghBBVSgJACCGqlASA
      EEJUKQkAIYSoUhIAQghRpSQAhBCiSkkACCFElZIAEEKIKiUBIIQQVUoCQAghqpQEgBBCVCkJ
      ACGEqFISAEIIUaWMb/sJCCEOUhRF+71Op3uLz0S87yQAhHhFiqJoxbpcLj/xd0+jFnSdTqf9
      qvzzyn8rxV+cNAkAIQ5RC3u5XKZUKlEsFimXy5TLZYrF4oH/LxQK5PN58vn8gT9/VgAYjUb0
      ej0mkwmj0YjFYsFgMGi/jEYjBoMBvV5/4Pd6vf5AYAhxHCQARNWoLOyKomjFXS3glcU8nU6T
      TCbJZDJacS8UCuRyOe1ry+Wy9vW5XI5CoUCpVDoQAJVFW1GUAwFgNpuxWq1a4Vf/zGKxYDQa
      MZvN2te4XC7sdjsmkwmLxYLFYsFkMmlBcjgkJCjEUUgAiFPlZbpH1CKvFuxcLsf+/j77+/tk
      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
      QAghStT/B9W+OmXOxxW6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='shot types avg passes/screens' width='384'>
      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
      j2kEeeKn/8mJgkLWZSUBYI+IBf8wmmHisCn0d/YQkZkDTC+42XfntNlsqKqcIJ5viqJIO88z
      XdelnReI1do5rAKg52QdHVOQm5mKHphiIqDhdqq0nqhCic0iMyWOWPsYhypPsDbNzf7qLh66
      Pi3UZQshxKIUVgEQFR9HR/n7HK8Igmmw6ZbPk5MSR0PncXS7D8UWx30PfJndL79JraZz6xce
      IDUuItRlCyHEohReAZCYxr0PPHjO62uLr5/5OSZpOd/45rcWsiwhhFiSwup7AEIIIRaOBIAQ
      QliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQ
      QliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQ
      QliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQ
      QliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUBIAQQliUPdQFzGaaJsN9
      XZRXVjHlNykq3kb2siQU5fQ4A12tnGzrnv7FZmddURFRbmdoChZCiEUsrPYAJgdbeOSJ54iI
      TyMnI4knH3ucwXHfrDFMjh54h54xH6qqoiqgGUbI6hVCiMUsrPYA3DFp/NWPfojHbQdTp3T/
      AcZ9fpJi3ACYpkHnkM4dt20nNdYT4mqFEGJxC6sAsDs92IGAd4J3Xn2JQOxy0hOiZ4abus7k
      WDdv7Hkep9PJ6sJNbCxchWpTCAaD6Lo+M24gEGBqaioEc2Etuq5LO8+zU31b2nn+Wa2dwyoA
      AEb62njid0+Tse4avnnf9Thtp08AKKqDb/zlXxPUDcaHB9j74nPYPN9kU94yHA4HDodjZlyn
      00lEREQoZsFSVFWVdp5ngUBA2nmBWK2dwyoANP8ETz72JDs//zU2r81EmX32FwATlyeSKIed
      +Ph4tm9YRc/gOOQtC0m9QgixmIVVAAx3nKAv4GK8r5l9fc2gONm8tZjGsvcheT2FWS4e+fUz
      bNi+Dbca4L1Dtdz/F7eFumwhhFiUwioAIhOzuPv26zDNU6/YMDFJy8rDjIjC4YnmwQe/wPHa
      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
      /w1776jQLRQcxgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
